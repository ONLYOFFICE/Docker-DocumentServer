language: generic

dist: trusty

env:
  # community edition
  - config: standalone.yml

  # integration edition
  - config: standalone.yml
    PRODUCT_NAME: documentserver-ie

  # certificates (default tls if onlyoffice not exists)
  - config: certs.yml
    ssl: true

  # certificates (default onlyoffice if exists)
  - config: certs.yml
    ssl: true
    private_key: onlyoffice.key
    certificate_request: onlyoffice.csr
    certificate: onlyoffice.crt

  # custom certificates
  - config: certs-customized.yml
    ssl: true
    private_key: mycert.key
    certificate_request: mycert.csr
    certificate: mycert.crt
    SSL_CERTIFICATE_PATH: /var/www/onlyoffice/Data/certs/mycert.crt
    SSL_KEY_PATH: /var/www/onlyoffice/Data/certs/mycert.key

  # postgresql
  - config: postgres.yml

  # custom values
  - config: postgres.yml
    DB_NAME: mydb
    DB_USER: myuser
    DB_PWD: password
    POSTGRES_DB: mydb
    POSTGRES_USER: myuser

  # deprecated variables
  - config: postgres-old.yml

  # mysql
  - config: mysql.yml

  # mariadb
  - config: mariadb.yml

  # activemq
  - config: activemq.yml

  # rabbitmq
  - config: rabbitmq.yml

  # rabbitmq old variables
  - config: rabbitmq-old.yml

  # redis with community edition
  - config: redis.yml

  # redis with integraion edition
  - config: redis.yml
    PRODUCT_NAME: documentserver-ie

services:
  - docker

script:
  # Go to tests dir
  - cd ${PWD}/tests

  # Run test.
  - ./test.sh
